[package]
name = "mcp4725"
version = "0.1.0"
edition = "2021"
description = "Embassy-based async driver for MCP4725 12-bit DAC"
license = "MIT"
repository = "https://github.com/yourusername/mcp4725-embassy"
keywords = ["embedded", "dac", "mcp4725", "embassy", "async"]
categories = ["embedded", "hardware-support"]

[dependencies]
# Core library dependencies (minimal)
embassy-time = { version = "0.4.0", optional = true }
embedded-hal = "1.0.0"
embedded-hal-async = "1.0.0"

# Example dependencies (optional)
embassy-stm32 = { version = "0.2.0", features = ["defmt", "stm32l053r8", "unstable-pac", "time-driver-any", "exti", "memory-x"], optional = true }
embassy-sync = { version = "0.7.0", features = ["defmt"], optional = true }
embassy-executor = { version = "0.7.0", features = ["arch-cortex-m", "executor-thread", "defmt"], optional = true }
defmt-rtt = { version = "1.0.0", optional = true }
embedded-io-async = { version = "0.6.1", optional = true }
cortex-m = { version = "0.7.7", features = ["inline-asm", "critical-section-single-core"], optional = true }
cortex-m-rt = { version = "0.7.5", optional = true }
panic-probe = { version = "1.0.0", features = ["print-defmt"], optional = true }
embassy-embedded-hal = { version = "0.3.1", optional = true }
embedded-hal-bus = { version = "0.3.0", optional = true }
critical-section = { version = "1.2.0", optional = true }
micromath = { version = "2.1.0", optional = true }
defmt = { version = "1.0.1", optional = true }

[profile.release]
debug = 2

[features]
default = []

[[example]]
name = "stm32_sine_wave"
required-features = ["embassy-stm32", "embassy-sync", "embassy-executor", "embassy-time", "defmt-rtt", "cortex-m", "cortex-m-rt", "panic-probe", "micromath", "defmt"]
